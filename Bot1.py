import asyncio
import logging
import random
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

TOKEN = "8187256278:AAGHaVx0TQXitoU2dlgmU0m-fnDENFisanI"

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –°–ø–∏—Å–æ–∫ —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ–≤–µ—Ç–æ–≤
advice_list = [
    "–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∫–æ–¥ –Ω–∞ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!",
    "–£—á–∏—Ç–µ Python –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äì —Ç–∞–∫ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ!",
    "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Google –∏ Stack Overflow, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ.",
    "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–π—Ç–µ —Ä—É—Ç–∏–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ ‚Äì —ç—Ç–æ —Å—ç–∫–æ–Ω–æ–º–∏—Ç –≤–∞–º –≤—Ä–µ–º—è!"
]

@dp.message(Command("start"))
async def start_command(message: types.Message):
    """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –≤–∞—à Telegram-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è —á—Ç–æ-–Ω–∏–±—É–¥—å!")

@dp.message(Command("advice"))
async def send_advice(message: types.Message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç"""
    advice = random.choice(advice_list)
    await message.answer(f"–°–æ–≤–µ—Ç –¥–Ω—è: {advice}")

@dp.message()
async def assistant(message: types.Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_text = message.text.lower()

    if "–∫–∞–∫ –¥–µ–ª–∞" in user_text:
        await message.answer("–£ –º–µ–Ω—è –≤—Å—ë –æ—Ç–ª–∏—á–Ω–æ! –ê —É –≤–∞—Å?")
    elif "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å" in user_text:
        await message.answer("–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –∏ –ø–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏!")
    else:
        await message.answer("–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å, –Ω–æ —É—á—É—Å—å! üòä")

async def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())

import openai

OPENAI_API_KEY = "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"

async def assistant(message: types.Message):
    """–ò—Å–ø–æ–ª—å–∑—É–µ—Ç OpenAI –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤"""
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[{"role": "user", "content": message.text}],
        api_key=OPENAI_API_KEY
    )
    await message.answer(response["choices"][0]["message"]["content"])

